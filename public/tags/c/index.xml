<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Haisheng Wu&#39;s Tech Blog</title>
    <link>http://localhost:1313/tags/c/</link>
    <description>Recent content in C on Haisheng Wu&#39;s Tech Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Jul 2014 20:56:50 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Typeof()</title>
      <link>http://localhost:1313/c-typeof/</link>
      <pubDate>Sun, 27 Jul 2014 20:56:50 +1000</pubDate>
      <guid>http://localhost:1313/c-typeof/</guid>
      <description>&lt;p&gt;看到项目中，有人这样写 &lt;code&gt;__weak __typeof__(self) wself = self;&lt;/code&gt;。我查了一下资料，总结一下。&lt;/p&gt;&#xA;&lt;p&gt;typeof关键字是C语言中的一个新扩展,在linux内核中应用非常广泛。&lt;/p&gt;&#xA;&lt;h3 id=&#34;说明&#34;&gt;说明&lt;/h3&gt;&#xA;&lt;p&gt;typeof()的参数可以是表达式或一种类型。返回的结果是一种类型。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;表达式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof(x[0](1));&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里假设 x 是一个函数指针数组，这样就可以得到这个函数返回值的类型了。如果将 typeof 用于表达式，则该表达式不会执行。只会得到该表达式的类型。以下示例声明了 int 类型的 var 变量，因为表达式 foo() 是 int 类型的。由于表达式不会被执行，所以不会调用 foo 函数。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;extern&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;typeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;一种类型&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof(int *) a,b;&lt;/code&gt; 等价于：&lt;code&gt;int *a,*b;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;例子&#34;&gt;例子&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;把 y 定义成 x 指向的数据类型：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof(*x) y;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;把 y 定义成 x 指向数据类型的数组：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof(*x) y[4];&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;把 y 定义成一个字符指针数组：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof(typeof(char *)[4]) y;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;这与下面的定义等价：&#xA;&lt;code&gt;char *y[4];&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof(int *) p1,p2; &lt;/code&gt;等价于&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;int *p1, *p2;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof(int) *p3,p4;&lt;/code&gt;等价于&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
