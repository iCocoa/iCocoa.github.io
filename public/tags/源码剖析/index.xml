<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>源码剖析 on Haisheng Wu&#39;s Tech Blog</title>
    <link>http://localhost:1313/tags/%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</link>
    <description>Recent content in 源码剖析 on Haisheng Wu&#39;s Tech Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 Dec 2018 22:21:48 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WebViewJavascriptBridge 源码剖析</title>
      <link>http://localhost:1313/ios-wvjb-sc-analyse/</link>
      <pubDate>Thu, 20 Dec 2018 22:21:48 +1000</pubDate>
      <guid>http://localhost:1313/ios-wvjb-sc-analyse/</guid>
      <description>&lt;p&gt;&lt;strong&gt;WebViewJavascriptBridge&lt;/strong&gt; 是一个可以让 OC 与 JS 进行交互通信的第三方开源库。相比其他热门的第三方库，WebViewJavascriptBridge 代码量比较少，并且设计优雅巧妙，可以说是 “小而美”。&lt;/p&gt;&#xA;&lt;p&gt;WebViewJavascriptBridge 库在 OC 端和 JS 端都有对等的逻辑实现，事先注册 handler，内部维护一个消息队列。透明的 &lt;code&gt;iframe&lt;/code&gt; HTML 元素和 webview 的 &lt;code&gt;stringByEvaluatingJavaScriptFromString&lt;/code&gt; 是通信的关键。OC 端发消息给 JS 端比较直观，调起 &lt;code&gt;stringByEvaluatingJavaScriptFromString&lt;/code&gt; 执行脚本传入消息即可。JS 端发消息给 OC 端，需要事先把消息存到队列中，然后借助 iframe 发起一个伪请求，伪请求会被 webview 的代理方法拦截下来，OC 端因此得知 JS 端消息队列中有消息，最后调起 &lt;code&gt;stringByEvaluatingJavaScriptFromString&lt;/code&gt; 方法解析 JS 方法拿到队列中的消息并处理。交互流程见下图：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dtbpgyfsc/image/upload/v1625297150/web/webviewjsbridge_z8kdpc.jpg&#34; alt=&#34;wbjb-sc-analyse-001&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;整个库只有以下几个文件：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WebViewJavascriptBridge.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WebViewJavascriptBridge.m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WKWebViewJavascriptBridge.h &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WKWebViewJavascriptBridge.m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WebViewJavascriptBridgeBase.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WebViewJavascriptBridgeBase.m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WebViewJavascriptBridge_JS.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WebViewJavascriptBridge_JS.m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;一般使用只需要关注 &lt;code&gt;WebViewJavascriptBridge&lt;/code&gt; 类提供的接口，这个类的主要职责是用来做 Mac 和 iOS webview 的适配（包括 WKWebView，但是这部分代理出去给 WKWebViewJavaScriptBridge 类）并为客户端提供便利的使用接口。&lt;code&gt;WebViewJavascriptBridgeBase&lt;/code&gt; 类负责有关数据加工、消息队列管理、消息派发及回调的处理工作。&lt;code&gt;WebViewJavascriptBridge_JS&lt;/code&gt; 类包含 JS 端的实现代码，通过宏处理返回 JS 端实现代码的一个 OC 字符串，便于在适当时机将其注入到文档模型中完成 bridge 的初始化。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
