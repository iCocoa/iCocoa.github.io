<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>源码剖析 on Haisheng Wu's Tech Blog</title><link>https://redscarf.me/tags/%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</link><description>Recent content in 源码剖析 on Haisheng Wu's Tech Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 20 Dec 2018 22:21:48 +1000</lastBuildDate><atom:link href="https://redscarf.me/tags/%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/index.xml" rel="self" type="application/rss+xml"/><item><title>WebViewJavascriptBridge 源码剖析</title><link>https://redscarf.me/ios-wvjb-sc-analyse/</link><pubDate>Thu, 20 Dec 2018 22:21:48 +1000</pubDate><guid>https://redscarf.me/ios-wvjb-sc-analyse/</guid><description>&lt;p>&lt;strong>WebViewJavascriptBridge&lt;/strong> 是一个可以让 OC 与 JS 进行交互通信的第三方开源库。相比其他热门的第三方库，WebViewJavascriptBridge 代码量比较少，并且设计优雅巧妙，可以说是 “小而美”。&lt;/p>
&lt;p>WebViewJavascriptBridge 库在 OC 端和 JS 端都有对等的逻辑实现，事先注册 handler，内部维护一个消息队列。透明的 &lt;code>iframe&lt;/code> HTML 元素和 webview 的 &lt;code>stringByEvaluatingJavaScriptFromString&lt;/code> 是通信的关键。OC 端发消息给 JS 端比较直观，调起 &lt;code>stringByEvaluatingJavaScriptFromString&lt;/code> 执行脚本传入消息即可。JS 端发消息给 OC 端，需要事先把消息存到队列中，然后借助 iframe 发起一个伪请求，伪请求会被 webview 的代理方法拦截下来，OC 端因此得知 JS 端消息队列中有消息，最后调起 &lt;code>stringByEvaluatingJavaScriptFromString&lt;/code> 方法解析 JS 方法拿到队列中的消息并处理。交互流程见下图：&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/dtbpgyfsc/image/upload/v1625297150/web/webviewjsbridge_z8kdpc.jpg" alt="wbjb-sc-analyse-001">&lt;/p>
&lt;p>整个库只有以下几个文件：&lt;/p>
&lt;pre tabindex="0">&lt;code>WebViewJavascriptBridge.h
WebViewJavascriptBridge.m
WKWebViewJavascriptBridge.h 
WKWebViewJavascriptBridge.m
WebViewJavascriptBridgeBase.h
WebViewJavascriptBridgeBase.m
WebViewJavascriptBridge_JS.h
WebViewJavascriptBridge_JS.m
&lt;/code>&lt;/pre>&lt;p>一般使用只需要关注 &lt;code>WebViewJavascriptBridge&lt;/code> 类提供的接口，这个类的主要职责是用来做 Mac 和 iOS webview 的适配（包括 WKWebView，但是这部分代理出去给 WKWebViewJavaScriptBridge 类）并为客户端提供便利的使用接口。&lt;code>WebViewJavascriptBridgeBase&lt;/code> 类负责有关数据加工、消息队列管理、消息派发及回调的处理工作。&lt;code>WebViewJavascriptBridge_JS&lt;/code> 类包含 JS 端的实现代码，通过宏处理返回 JS 端实现代码的一个 OC 字符串，便于在适当时机将其注入到文档模型中完成 bridge 的初始化。&lt;/p></description></item></channel></rss>