<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Haisheng Wu's Tech Blog</title><link>https://redscarf.me/tags/python/</link><description>Recent content in Python on Haisheng Wu's Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 23 Jul 2018 20:00:50 +1000</lastBuildDate><atom:link href="https://redscarf.me/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>iOS 远程打包脚本制作</title><link>https://redscarf.me/ios-remote-pack/</link><pubDate>Mon, 23 Jul 2018 20:00:50 +1000</pubDate><guid>https://redscarf.me/ios-remote-pack/</guid><description>在 iOS 开发中，一般打发布包都是在本地打包，也就是工程师在自己开发电脑上使用 Xcode 编译并导出安装包来进行发布，为了提高效率可能会制作一些自动化打包脚本。本文聊的是远程打包的内容，通过资源拷贝及参数替换然后编译完成打包。
由于 HTML5 跨平台的特点，很多技术团队考虑到代码复用，在部分模块中会采用 h5 来描述界面。甚至有些不需要太复杂交互的 app，全部界面采用 h5 来编写，也就是一个 web 工程。对于大部分现有的 web 工程，能打包成 app 就已经满足了业务诉求。DCloud 团队开发的 HBuilder（IDE）工具中提供了云打包的功能，用起来很方便，简单的说，就是把 web 工程上传到云打包服务器，最后打包生成 app，点击下载即可安装使用。
虽然云打包服务很方便，但上传源码总感觉不太妥当，总有些秘密不想让别人看见，并且其他同事也有打包的需求，但不一定会使用 HBuilder。因此，搭建一个自己的打包服务很有必要。
按照 HBuilder 提供的云打包功能，先定一个初步的需求：
支持修改应用 id、版本号 、icon、启动图 支持导入签名文件 开工！！！
准备工作 首先，需要一台安装了 MacOS 的电脑（当做服务器使用）。
笔者手头上刚好有台闲置的电脑就拿来当服务器使用了，装了 WMWare，然后装了 MacOS 虚拟机（问题较多，不建议使用虚拟机）。
物理机 windows7，内存 4G；虚拟机 MacOS，内存 3G。
其次，在服务器上部署一个 web 服务，提供打包交互界面方便客户端上传资源文件及下载安装包。我们的界面只提供了一个 www zip 包的上传入口，所有应用资源及打包相关的配置文件都在里面。www 目录结构如下：
appConfig.json 文件内容 { &amp;#34;id&amp;#34;:&amp;#34;com.domain.pack&amp;#34;, &amp;#34;appName&amp;#34;:&amp;#34;我的应用&amp;#34;, &amp;#34;debug&amp;#34;:true, &amp;#34;launchPath&amp;#34;: &amp;#34;index.html&amp;#34;, &amp;#34;version&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;1.0.0&amp;#34;, &amp;#34;code&amp;#34;: &amp;#34;100&amp;#34; }, ... } launchPath 对应 web 应用入口文件，iOS 工程使用这个文件路径作为 webview 的加载入口。</description></item></channel></rss>