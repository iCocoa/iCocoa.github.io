<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C on Haisheng Wu's Tech Blog</title><link>http://www.redscarf.me/tags/c/</link><description>Recent content in C on Haisheng Wu's Tech Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 27 Jul 2014 20:56:50 +1000</lastBuildDate><atom:link href="http://www.redscarf.me/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Typeof()</title><link>http://www.redscarf.me/c-typeof/</link><pubDate>Sun, 27 Jul 2014 20:56:50 +1000</pubDate><guid>http://www.redscarf.me/c-typeof/</guid><description>&lt;p>看到项目中，有人这样写 &lt;code>__weak __typeof__(self) wself = self;&lt;/code>。我查了一下资料，总结一下。&lt;/p>
&lt;p>typeof关键字是C语言中的一个新扩展,在linux内核中应用非常广泛。&lt;/p>
&lt;h3 id="说明">说明&lt;/h3>
&lt;p>typeof()的参数可以是表达式或一种类型。返回的结果是一种类型。&lt;/p>
&lt;ul>
&lt;li>表达式&lt;/li>
&lt;/ul>
&lt;p>&lt;code>typeof(x[0](1));&lt;/code>&lt;/p>
&lt;p>这里假设 x 是一个函数指针数组，这样就可以得到这个函数返回值的类型了。如果将 typeof 用于表达式，则该表达式不会执行。只会得到该表达式的类型。以下示例声明了 int 类型的 var 变量，因为表达式 foo() 是 int 类型的。由于表达式不会被执行，所以不会调用 foo 函数。&lt;/p>
&lt;pre tabindex="0">&lt;code>extern int foo();
typeof(foo()) var;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>一种类型&lt;/li>
&lt;/ul>
&lt;p>&lt;code>typeof(int *) a,b;&lt;/code> 等价于：&lt;code>int *a,*b;&lt;/code>&lt;/p>
&lt;h3 id="例子">例子&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>把 y 定义成 x 指向的数据类型：&lt;/p>
&lt;p>&lt;code>typeof(*x) y;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把 y 定义成 x 指向数据类型的数组：&lt;/p>
&lt;p>&lt;code>typeof(*x) y[4];&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把 y 定义成一个字符指针数组：&lt;/p>
&lt;p>&lt;code>typeof(typeof(char *)[4]) y;&lt;/code>&lt;/p>
&lt;p>这与下面的定义等价：
&lt;code>char *y[4];&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>typeof(int *) p1,p2; &lt;/code>等价于&lt;/p>
&lt;p>&lt;code>int *p1, *p2;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>typeof(int) *p3,p4;&lt;/code>等价于&lt;/p></description></item></channel></rss>