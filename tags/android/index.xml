<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on Haisheng Wu's Tech Blog</title><link>http://www.redscarf.me/tags/android/</link><description>Recent content in Android on Haisheng Wu's Tech Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 09 Jun 2018 12:36:16 +1000</lastBuildDate><atom:link href="http://www.redscarf.me/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Android Gradle 注入编译变量</title><link>http://www.redscarf.me/android-gradle-build/</link><pubDate>Sat, 09 Jun 2018 12:36:16 +1000</pubDate><guid>http://www.redscarf.me/android-gradle-build/</guid><description>&lt;p>最近为了制作 Android 应用打包脚本，学习了一下 gradle。Gradle 构建系统语法简洁、功能强大、配置灵活，笔者只是把它当作一个构建工具来使用，基于它所提供的便利制作可以修改版本号、编译号、id 及导入证书的脚本。&lt;/p>
&lt;p>对于一个项目或者一个工程，Gradle 可以定义多个构建任务，debug 和 release 是常见的两个构建任务，用户还可以根据需要自定义自己的构建任务，如测试构建任务和预发布构建任务，甚至是针对不同发布渠道的构建任务。这里只用到 debug 任务。&lt;/p>
&lt;p>gradle 命令行支持传入自定义参数，并在编译过程注入这些参数。&lt;/p>
&lt;h2 id="修改-appid-及-版本号">修改 appid 及 版本号&lt;/h2>
&lt;h3 id="修改-buildgradle-文件">修改 build.gradle 文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>android {
 compileSdkVersion 21
 buildToolsVersion &amp;#39;26.0.2&amp;#39;
 defaultConfig {
 applicationId project.hasProperty(&amp;#39;applicationId&amp;#39;) ? applicationId : &amp;#34;com.domain.myApp&amp;#34;
 minSdkVersion 14
 targetSdkVersion 21
 versionCode project.hasProperty(&amp;#39;versionCode&amp;#39;) ? versionCode.toInteger() : 100
 versionName project.hasProperty(&amp;#39;versionName&amp;#39;) ? versionName : &amp;#34;1.0.0&amp;#34;
 testInstrumentationRunner &amp;#34;android.support.test.runner.AndroidJUnitRunner&amp;#34;
 }
&lt;/code>&lt;/pre>&lt;h3 id="命令行中传入对应-key-的参数">命令行中传入对应 key 的参数&lt;/h3>
&lt;pre tabindex="0">&lt;code>gradle assembleDebug -PversionCode=&amp;#34;200&amp;#34; -PversionName=&amp;#34;2.0.0&amp;#34; -PapplicationId=&amp;#34;com.domain.myApp.debug&amp;#34;
&lt;/code>&lt;/pre>&lt;p>修改应用 id 的最好同时修改包名，不然会有包名冲突，修改包名需要修改 &lt;code>AndroidManifest.xml&lt;/code> 文件，先在 &lt;code>build.gradle&lt;/code> 文件中使用 &lt;code>manifestPlaceholders &lt;/code> 属性定义一个键：&lt;/p></description></item><item><title>《第一行代码》</title><link>http://www.redscarf.me/android-first-line-code-note/</link><pubDate>Sat, 14 Oct 2017 11:59:26 +1000</pubDate><guid>http://www.redscarf.me/android-first-line-code-note/</guid><description>&lt;p>最近为了学习 Android，找从事 Android 开发的朋友推荐些书，最后他推荐了《第一行代码》（第 2 版）和《Android 开发艺术探索》两本书。本文是在阅读了《第一行代码》之后所做的笔记，主要记录 Android 平台上的一些比较有趣的特性以及它和 iOS 的不同之处。&lt;/p>
&lt;h2 id="android-全貌">Android 全貌&lt;/h2>
&lt;ul>
&lt;li>2008 年 9 月，Google 正式发布 Android 1.0 系统&lt;/li>
&lt;li>2014 年 Google I/O 大会上发布号称史上版本改动最大的 Android 5.0 系统，这版本使用 ART 运行环境替换 Dalvik 虚拟机，同时推出 Wear、Auto、TV 系统&lt;/li>
&lt;li>2016 年 Google I/O 大会推出 Android 7.0，加入多窗口模式&lt;/li>
&lt;/ul>
&lt;h3 id="android-系统架构">Android 系统架构&lt;/h3>
&lt;p>Android 系统架构分为四层：Linux 内核层、系统运行库层、应用架构层、应用层。&lt;/p>
&lt;p>&lt;strong>Linux 内核层&lt;/strong>：主要包含一些硬件的底层驱动。&lt;/p>
&lt;p>&lt;strong>系统运行库层&lt;/strong>：包含 C/C++ 的底层支持库，例如：支持 3D 绘图的 OpenGL|ES 库、浏览器内核 Webkit 库和 SQLite 数据库支持库。另外还包含 Android 运行时库。&lt;/p>
&lt;p>&lt;strong>应用架构层&lt;/strong>：包含构建应用程序用到的 API，开发人员主要使用这层提供的 API 来构建应用。&lt;/p>
&lt;p>&lt;strong>应用层&lt;/strong>：包含手机上安装的应用，联系人、短信等。&lt;/p>
&lt;p>&lt;img src="https://res.cloudinary.com/dtbpgyfsc/image/upload/v1625292644/Android/Android-System-Architecture_knmkfo.png" alt="Android 系统架构">&lt;/p>
&lt;p>Android 系统为开发人员提供了：&lt;/p></description></item></channel></rss>